{"ast":null,"code":"import { createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"undoRedo\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  ref: \"can\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.uploadFile && $options.uploadFile(...args))\n  }, null, 32\n  /* HYDRATE_EVENTS */\n  ), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.onBoundingBoxActive && $options.onBoundingBoxActive(...args))\n  }, \" Bounding Box \"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.logCanvasData && $options.logCanvasData(...args))\n  }, \" Log Canvas \"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.undoHistory && $options.undoHistory(...args))\n  }, \" Undo \"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.redoHistory && $options.redoHistory(...args))\n  }, \" Redo \"), _createElementVNode(\"canvas\", _hoisted_2, null, 512\n  /* NEED_PATCH */\n  )], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCACIA,oBACM,KADN,EACM;AADDC,OAAK,EAAC;AACL,CADN,EAAqB,IAArB,EAAqB;AAAA;AAArB;;;AAOQC,KAAG,EAAC;;;6DAPZC,YAEAH,oBAA2D,OAA3D,EAA2D;AAApDI,QAAI,EAAC,MAA+C;AAAxCC,UAAM,EAAC,SAAiC;AAAtBC,YAAM,yCAAEC,mDAAF;AAAgB,GAA3D;;AAAA,KACAP,oBAA4D,QAA5D,EAA4D;AAAnDQ,WAAK,yCAAED,qEAAF;AAA8C,GAA5D,EAAqC,gBAArC,GACAP,oBAAoD,QAApD,EAAoD;AAA3CQ,WAAK,yCAAED,yDAAF;AAAsC,GAApD,EAA+B,cAA/B,GACAP,oBAA4C,QAA5C,EAA4C;AAAnCQ,WAAK,yCAAED,qDAAF;AAA8B,GAA5C,EAA6B,QAA7B,GACAP,oBAA4C,QAA5C,EAA4C;AAAnCQ,WAAK,yCAAED,qDAAF;AAA8B,GAA5C,EAA6B,QAA7B,GACAP,oBAA2B,QAA3B,cAA2B,IAA3B,EAA2B;AAAA;AAA3B","names":["_createElementVNode","class","ref","_hoisted_1","type","accept","onChange","$options","onClick"],"sourceRoot":"","sources":["/Users/boo/Desktop/poiesis/src/components/UploadButton.vue"],"sourcesContent":["<template>\n    <div class=\"undoRedo\">\n    </div>\n    <input type=\"file\" accept=\"image/*\" @change=\"uploadFile\" />\n    <button @click=\"onBoundingBoxActive\"> Bounding Box </button>\n    <button @click=\"logCanvasData\"> Log Canvas </button>\n    <button @click=\"undoHistory\"> Undo </button>\n    <button @click=\"redoHistory\"> Redo </button>\n    <canvas ref=\"can\"></canvas>\n</template>\n\n<script>\nimport { fabric } from 'fabric';\nimport BoundingBox from '../assets/BoundingBox.js'\nimport History from '../assets/StateStore.js'\n\nexport default {\n  name: 'imageUpload',\n  props: {\n      canW: {\n          type: [String,Number],\n          required: true\n      },\n      canH: {\n          type: [String,Number],\n          required: true\n      },\n  },\n  data() {\n    return {\n      item:{\n          image : null,\n          imageUrl: null\n      },\n      canvas: null,\n      boundingBoxActive: false,\n      bgSet: false,\n    }\n  },\n  mounted() {\n      this.canvas = new fabric.Canvas(this.$refs.can, {selection: false});\n      this.canvas.setDimensions({width: this.canW, height: this.canH});\n      this.history = new History();\n  },\n  methods: {\n    turnOffListeners() {\n      if (this.boundingBoxActive) {\n        this.boundingBoxActive = !this.boundingBoxActive;\n      }\n      this.canvas.off('mouse:down').off('mouse:move').off('mouse:up');\n    },\n    updateHistory() {\n      this.canvas.renderAll();\n      console.log(JSON.stringify(this.canvas));\n      this.history.push(JSON.stringify(this.canvas));\n    },\n    undoHistory() {\n      this.turnOffListeners();\n      this.canvas.loadFromJSON(this.history.undo());\n    },\n    redoHistory() {\n      this.turnOffListeners();\n      this.canvas.loadFromJSON(this.history.redo());\n    },\n    uploadFile(e) {\n      const file = e.target.files[0];\n      this.item.image = file;\n      this.item.imageUrl = URL.createObjectURL(file);\n      this.canvas.setBackgroundImage(this.item.imageUrl, this.canvas.renderAll.bind(this.canvas));\n      this.canvas.renderAll();\n      this.bgSet = 1;\n    },\n    onBoundingBoxActive() {\n      if (this.bgSet) {\n        this.updateHistory();\n        this.bgSet = !this.bgSet;\n      }\n      this.boundingBoxActive = !this.boundingBoxActive;\n      BoundingBox(this.canvas, this.boundingBoxActive, this.history);   \n    },\n    logCanvasData() {\n      console.log(JSON.stringify(this.canvas));\n    }\n  },\n\n} \n</script>"]},"metadata":{},"sourceType":"module"}