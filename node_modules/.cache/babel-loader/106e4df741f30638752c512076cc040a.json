{"ast":null,"code":"import { fabric } from 'fabric';\nimport BoundingBox from '../assets/BoundingBox.js';\nimport History from '../assets/StateStore.js';\nexport default {\n  name: 'imageUpload',\n  props: {\n    canW: {\n      type: [String, Number],\n      required: true\n    },\n    canH: {\n      type: [String, Number],\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      mode: \"dark\",\n      arr: [\"Poiesis\", \"ποίησις\"],\n      item: {\n        image: null,\n        imageUrl: null\n      },\n      canvas: null,\n      boundingBoxActive: false,\n      bgSet: false\n    };\n  },\n\n  mounted() {\n    this.canvas = new fabric.Canvas(this.$refs.can, {\n      selection: false\n    });\n    this.canvas.setDimensions({\n      width: this.canW,\n      height: this.canH\n    });\n    this.history = new History();\n  },\n\n  methods: {\n    changeMode() {\n      if (this.mode === \"dark\") {\n        this.mode === \"light\";\n      } else {\n        this.mode === \"dark\";\n      }\n\n      console.log(this.mode);\n    },\n\n    turnOffListeners() {\n      if (this.boundingBoxActive) {\n        this.boundingBoxActive = !this.boundingBoxActive;\n      }\n\n      this.canvas.off('mouse:down').off('mouse:move').off('mouse:up');\n    },\n\n    // cursor(el){\n    //   gsap.to(el,{opacity:0,ease:\"power2.inOut\",repeat:-1})\n    // },\n    updateHistory() {\n      this.canvas.renderAll();\n      console.log(JSON.stringify(this.canvas));\n      this.history.push(JSON.stringify(this.canvas));\n    },\n\n    undoHistory() {\n      this.turnOffListeners();\n      this.canvas.loadFromJSON(this.history.undo());\n    },\n\n    redoHistory() {\n      this.turnOffListeners();\n      this.canvas.loadFromJSON(this.history.redo());\n    },\n\n    uploadFile(e) {\n      const file = e.target.files[0];\n      this.item.image = file;\n      this.item.imageUrl = URL.createObjectURL(file);\n      this.canvas.setBackgroundImage(this.item.imageUrl, this.canvas.renderAll.bind(this.canvas));\n      this.canvas.renderAll();\n      this.bgSet = 1;\n    },\n\n    onBoundingBoxActive() {\n      if (this.bgSet) {\n        this.updateHistory();\n        this.bgSet = !this.bgSet;\n      }\n\n      this.boundingBoxActive = !this.boundingBoxActive;\n      BoundingBox(this.canvas, this.boundingBoxActive, this.history);\n    },\n\n    logCanvasData() {\n      console.log(JSON.stringify(this.canvas));\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["fabric","BoundingBox","History","name","props","canW","type","String","Number","required","canH","data","mode","arr","item","image","imageUrl","canvas","boundingBoxActive","bgSet","mounted","Canvas","$refs","can","selection","setDimensions","width","height","history","methods","changeMode","console","log","turnOffListeners","off","updateHistory","renderAll","JSON","stringify","push","undoHistory","loadFromJSON","undo","redoHistory","redo","uploadFile","e","file","target","files","URL","createObjectURL","setBackgroundImage","bind","onBoundingBoxActive","logCanvasData"],"sourceRoot":"","sources":["/Users/boo/Desktop/poiesis/src/components/UploadButton.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n      <div class=\"col\">\n         <div class=\"navBar \" :class=\"(mode === 'dark')?'dark':'light'\">\n            <VueWriter :array=\"arr\" :typeSpeed=\"100\" :eraseSpeed=\"70\"  :delay=\"2000\"/>\n            <div class=\"something\" :class=\"(mode === 'dark')?'dark':'light'\">\n            <button class=\"dark-mode-button\" @click=\"changeMode\"><span><font-awesome-icon icon='sun' size=\"3x\"/></span></button>     \n        </div>\n    </div>\n      <div class=\"row\">\n             <div class=\"graph horizontal-container\" :class=\"(mode === 'dark')?'dark':'light'\">\n                <h3>Outline</h3>\n              </div>\n              <div class=\"col\">\n                  <div class=\"row\">\n                     <div class=\"upload horizontal-container\" :class=\"(mode === 'dark')?'dark':'light'\">\n                        <h3>Upload your graph</h3>\n                        <input class=\"upload-button\" type=\"file\" accept=\"image/*\" @change=\"uploadFile\"/>\n                      </div>\n                      <div class=\"undoRedo horizontal-container\">\n                        <h3>Functional Bar</h3>\n                        <div class=\"button-group\">\n                          <button @click=\"undoHistory\"> Undo </button>\n                          <button @click=\"redoHistory\"> Redo </button>\n                          <button @click=\"onBoundingBoxActive\"> Bounding Box </button>\n                          <button @click=\"logCanvasData\"> Log Canvas </button>\n                        </div>\n                      </div>\n                  </div>\n                  <div class=\"horizontal-container min-height\">\n                    <h3>Graph</h3>\n                    <canvas ref=\"can\"></canvas>\n                  </div>\n              </div>\n      </div>\n      </div>\n    </div>\n    \n   \n</template>\n\n<script>\nimport { fabric } from 'fabric';\nimport BoundingBox from '../assets/BoundingBox.js'\nimport History from '../assets/StateStore.js'\n\n\n\nexport default {\n\n  \n  name: 'imageUpload',\n  props: {\n      canW: {\n          type: [String,Number],\n          required: true\n      },\n      canH: {\n          type: [String,Number],\n          required: true\n      },\n  },\n  data() {\n    return {\n     mode:\"dark\",\n     arr: [\"Poiesis\", \"ποίησις\"],\n      item:{\n          image : null,\n          imageUrl: null\n      },\n      canvas: null,\n      boundingBoxActive: false,\n      bgSet: false,\n    }\n  },\n  mounted() {\n      \n      this.canvas = new fabric.Canvas(this.$refs.can, {selection: false});\n      this.canvas.setDimensions({width: this.canW, height: this.canH});\n      this.history = new History();\n  },\n  methods: {\n    changeMode(){\n      if(this.mode===\"dark\"){\n        this.mode===\"light\"\n      }else{\n        this.mode===\"dark\"\n      }\n      console.log(this.mode)\n    },\n    turnOffListeners() {\n      if (this.boundingBoxActive) {\n        this.boundingBoxActive = !this.boundingBoxActive;\n      }\n      this.canvas.off('mouse:down').off('mouse:move').off('mouse:up');\n    },\n    // cursor(el){\n    //   gsap.to(el,{opacity:0,ease:\"power2.inOut\",repeat:-1})\n    // },\n    updateHistory() {\n      this.canvas.renderAll();\n      console.log(JSON.stringify(this.canvas));\n      this.history.push(JSON.stringify(this.canvas));\n    },\n    undoHistory() {\n      this.turnOffListeners();\n      this.canvas.loadFromJSON(this.history.undo());\n    },\n    redoHistory() {\n      this.turnOffListeners();\n      this.canvas.loadFromJSON(this.history.redo());\n    },\n    uploadFile(e) {\n      const file = e.target.files[0];\n      this.item.image = file;\n      this.item.imageUrl = URL.createObjectURL(file);\n      \n      \n      this.canvas.setBackgroundImage(this.item.imageUrl,this.canvas.renderAll.bind(this.canvas));\n      this.canvas.renderAll();\n      this.bgSet = 1;\n    },\n    onBoundingBoxActive() {\n      if (this.bgSet) {\n        this.updateHistory();\n        this.bgSet = !this.bgSet;\n      }\n      this.boundingBoxActive = !this.boundingBoxActive;\n      BoundingBox(this.canvas, this.boundingBoxActive, this.history);   \n    },\n    logCanvasData() {\n      console.log(JSON.stringify(this.canvas));\n    }\n  },\n\n} \n</script>"]},"metadata":{},"sourceType":"module"}