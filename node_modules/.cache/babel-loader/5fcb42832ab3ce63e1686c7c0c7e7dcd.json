{"ast":null,"code":"import { fabric } from 'fabric';\nimport BoundingBox from '../assets/BoundingBox.js';\nimport History from '../assets/StateStore.js';\nimport gsap from 'gsap';\nexport default {\n  name: 'imageUpload',\n  props: {\n    canW: {\n      type: [String, Number],\n      required: true\n    },\n    canH: {\n      type: [String, Number],\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      item: {\n        image: null,\n        imageUrl: null\n      },\n      canvas: null,\n      boundingBoxActive: false,\n      bgSet: false\n    };\n  },\n\n  mounted() {\n    this.canvas = new fabric.Canvas(this.$refs.can, {\n      selection: false\n    });\n    this.canvas.setDimensions({\n      width: this.canW,\n      height: this.canH\n    });\n    this.history = new History();\n  },\n\n  methods: {\n    cursor(el) {\n      gsap.to(el, {\n        opacity: 0,\n        ease: \"power2.inOut\",\n        repeat: -1\n      });\n    },\n\n    turnOffListeners() {\n      if (this.boundingBoxActive) {\n        this.boundingBoxActive = !this.boundingBoxActive;\n      }\n\n      this.canvas.off('mouse:down').off('mouse:move').off('mouse:up');\n    },\n\n    updateHistory() {\n      this.canvas.renderAll();\n      console.log(JSON.stringify(this.canvas));\n      this.history.push(JSON.stringify(this.canvas));\n    },\n\n    undoHistory() {\n      this.turnOffListeners();\n      this.canvas.loadFromJSON(this.history.undo());\n    },\n\n    redoHistory() {\n      this.turnOffListeners();\n      this.canvas.loadFromJSON(this.history.redo());\n    },\n\n    uploadFile(e) {\n      const file = e.target.files[0];\n      this.item.image = file;\n      this.item.imageUrl = URL.createObjectURL(file);\n      this.canvas.setBackgroundImage(this.item.imageUrl, this.canvas.renderAll.bind(this.canvas));\n      this.canvas.renderAll();\n      this.bgSet = 1;\n    },\n\n    onBoundingBoxActive() {\n      if (this.bgSet) {\n        this.updateHistory();\n        this.bgSet = !this.bgSet;\n      }\n\n      this.boundingBoxActive = !this.boundingBoxActive;\n      BoundingBox(this.canvas, this.boundingBoxActive, this.history);\n    },\n\n    logCanvasData() {\n      console.log(JSON.stringify(this.canvas));\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["fabric","BoundingBox","History","gsap","name","props","canW","type","String","Number","required","canH","data","item","image","imageUrl","canvas","boundingBoxActive","bgSet","mounted","Canvas","$refs","can","selection","setDimensions","width","height","history","methods","cursor","el","to","opacity","ease","repeat","turnOffListeners","off","updateHistory","renderAll","console","log","JSON","stringify","push","undoHistory","loadFromJSON","undo","redoHistory","redo","uploadFile","e","file","target","files","URL","createObjectURL","setBackgroundImage","bind","onBoundingBoxActive","logCanvasData"],"sourceRoot":"","sources":["/Users/boo/Desktop/poiesis/src/components/UploadButton.vue"],"sourcesContent":["<template>\n    <div class=\"navBar\">\n     <transition appear @enter=\"cursor\">\n      <span ref=\"cursor\" class=\"cursor\">_</span>\n      </transition>\n      <span class=\"text\"></span>\n      <div class=\"something\">\n        <div class=\"darkmode Button\">\n          <button></button>\n        </div>\n      </div>\n    </div>\n    <div class=\"container\">\n      <div class=\"graph horizontal-container\">\n        <h3>Outline</h3>\n      </div>\n      <div class=\"upload horizontal-container\">\n        <h3>Upload your graph</h3>\n        <button class=\"upload-button\" @click=\"uploadFile\">\n          <div class=\"icon\">\n            <div class=\"arrow\"></div>\n            <svg class=\"line\" viewBox=\"0 0 24 24\"></svg>\n          </div>\n           Upload\n        </button>\n        <input type=\"file\" accept=\"image/*\" @change=\"uploadFile\"/>\n        <canvas ref=\"can\"></canvas>\n      </div>\n      <div class=\"undoRedo horizontal-container\">\n        <h3>Functional Bar</h3>\n        <button @click=\"undoHistory\"> Undo </button>\n        <button @click=\"redoHistory\"> Redo </button>\n      </div>\n      <div class=\"input horizontal-container\">\n        <h3>Other thing</h3>\n        <button @click=\"onBoundingBoxActive\"> Bounding Box </button>\n         <button @click=\"logCanvasData\"> Log Canvas </button>\n      </div>\n    \n \n   \n    </div>\n   \n</template>\n\n<script>\nimport { fabric } from 'fabric';\nimport BoundingBox from '../assets/BoundingBox.js'\nimport History from '../assets/StateStore.js'\nimport gsap from 'gsap'\n\nexport default {\n\n\n  name: 'imageUpload',\n  props: {\n      canW: {\n          type: [String,Number],\n          required: true\n      },\n      canH: {\n          type: [String,Number],\n          required: true\n      },\n  },\n  data() {\n    return {\n      item:{\n          image : null,\n          imageUrl: null\n      },\n      canvas: null,\n      boundingBoxActive: false,\n      bgSet: false,\n    }\n  },\n  mounted() {\n      \n      this.canvas = new fabric.Canvas(this.$refs.can, {selection: false});\n      this.canvas.setDimensions({width: this.canW, height: this.canH});\n      this.history = new History();\n  },\n  methods: {\n    cursor(el){\n      gsap.to(el,{opacity:0,ease:\"power2.inOut\",repeat:-1})\n    },\n    turnOffListeners() {\n      if (this.boundingBoxActive) {\n        this.boundingBoxActive = !this.boundingBoxActive;\n      }\n      this.canvas.off('mouse:down').off('mouse:move').off('mouse:up');\n    },\n    updateHistory() {\n      this.canvas.renderAll();\n      console.log(JSON.stringify(this.canvas));\n      this.history.push(JSON.stringify(this.canvas));\n    },\n    undoHistory() {\n      this.turnOffListeners();\n      this.canvas.loadFromJSON(this.history.undo());\n    },\n    redoHistory() {\n      this.turnOffListeners();\n      this.canvas.loadFromJSON(this.history.redo());\n    },\n    uploadFile(e) {\n      const file = e.target.files[0];\n      this.item.image = file;\n      this.item.imageUrl = URL.createObjectURL(file);\n      this.canvas.setBackgroundImage(this.item.imageUrl, this.canvas.renderAll.bind(this.canvas));\n      this.canvas.renderAll();\n      this.bgSet = 1;\n    },\n    onBoundingBoxActive() {\n      if (this.bgSet) {\n        this.updateHistory();\n        this.bgSet = !this.bgSet;\n      }\n      this.boundingBoxActive = !this.boundingBoxActive;\n      BoundingBox(this.canvas, this.boundingBoxActive, this.history);   \n    },\n    logCanvasData() {\n      console.log(JSON.stringify(this.canvas));\n    }\n  },\n\n} \n</script>"]},"metadata":{},"sourceType":"module"}